@model PagedResponseModel<GetAllShowsResponseModel>
@{
    ViewData["Title"] = "Home Page";
    var search = @ViewContext.HttpContext.Request.Query["Search"];
    var pageIndex = @ViewContext.HttpContext.Request.Query["PageIndex"].SingleOrDefault() ?? "0";
    var pageSize = @ViewContext.HttpContext.Request.Query["PageSize"].SingleOrDefault() ?? int.MaxValue.ToString();
}


<form asp-action="Index" method="get" id="pagedList">
    <a asp-action="Create" class="btn btn-success" style="margin-top: 20px; margin-bottom:20px;">Add Show</a><br />
    <div class="container">
        <div class="row">
            <div class="col-8">
                <div class="input-group">
                    <input type="text" name="Search" value="@search" class="form-control" style="margin-bottom: 20px; max-width:70%" />
                    <div class="input-group-append ml-2" style="margin-bottom: 20px;">
                        <button type="submit" class="btn btn-primary" style="width: 100%;">
                            <i class="fa fa-search" aria-hidden="true"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Order</th>
                <th>Name</th>
                <th>Category</th>
                <th>Status</th>
                <th>Total Episode</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @{
                var counter = 1;
            }

            @foreach (var Show in Model.Data)
            {
                    <tr id="show_@Show.Id">
                        <td>
                        @counter
                        </td>
                        <td>@Show.Name</td>
                        <td>
                        @switch (Show.Category)
                        {
                            case Category.Manga:
                                <text>Manga</text>
                                break;
                            case Category.Anime:
                                <text>Anime</text>
                                break;
                            default:
                                break;
                        }
                        </td>
                        <td>
                        @switch (Show.Status)
                        {
                            case Status.Ongoing:
                                <text>Ongoing</text>
                                break;
                            case Status.Done:
                                <text>Done</text>
                                break;
                            case Status.OnBreak:
                                <text>Onbreak</text>
                                break;
                            default:
                                break;
                        }
                        </td>
                        <td>@Show.TotalEpisode</td>
                        <td>
                            <button type="button" class="btn btn-danger btnDelete" data-id="@Show.Id">
                                <i class="fa fa-minus-circle" aria-hidden="true"></i>
                            </button>
                            <button type="button" class="btn btn-success btnAdd" data-id="@Show.Id">
                                <i class="fa fa-plus-square-o" aria-hidden="true"></i>
                            </button>
                            <a href="/Show/Update/@Show.Id" class="btn btn-primary">
                                <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                            </a>
                        </td>
                    </tr>
                counter++;
            }
        </tbody>
    </table>
    <div style="float:left;">
        @for (int i = 0; i < Model.TotalPage; i++)
        {
                <button type="submit" value="@i" class="btn @(pageIndex == i.ToString() ? "btn-success": "btn-info")" name="PageIndex">@(i + 1)</button>
        }
    </div>
    <select name="PageSize" class="form-control" style="float:right; width:200px;" onchange="document.getElementById('pagedList').submit()">
        <!option value="1" @(pageSize == "1" ? "selected" : string.Empty)>
        1
        </!option>
        <!option value="5" @(pageSize == "5" ? "selected" : string.Empty)>
        5
        </!option>
        <!option value="20" @(pageSize == "20" ? "selected" : string.Empty)>
        20
        </!option>
        <!option value="50" @(pageSize == "50" ? "selected" : string.Empty)>
        50
        </!option>
        <!option value="100" @(pageSize == "100" ? "selected" : string.Empty)>
        100
        </!option>
        <!option value="@int.MaxValue" @(pageSize == int.MaxValue.ToString() ? "selected" : string.Empty)>
        Hepsi
        </!option>
    </select>
</form>
